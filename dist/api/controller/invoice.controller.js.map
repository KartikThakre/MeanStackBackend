{"version":3,"sources":["../../../src/api/controller/invoice.controller.js"],"names":["findAll","req","res","next","Invoice","find","then","json","invoice","catch","status","HttpStatus","INTERNAL_SERVER_ERROR","err","create","body","item","qty","date","due","rate","tax","BAD_REQUEST","findOne","id","params","findById","NOT_FOUND","delete","findByIdAndRemove","update","schema","Joi","object","keys","string","optional","number","integer","va","error","value","details","findOneAndUpdate","_id","new"],"mappings":"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","file":"invoice.controller.js","sourcesContent":["import Joi from 'joi';\r\nimport  Invoice  from '../model/invoice.model';\r\nimport HttpStatus from 'http-status-codes';\r\n\r\nexport default{\r\n    findAll(req,res,next){\r\n       Invoice.find().then(invoice => res.json(invoice))\r\n       .catch(err =>res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    create(req,res,next){\r\n    // const error = new Error('Not Found');    //specific URL type middleware to handle the error\r\n    // error.message = \"MMAMAMAMA\";\r\n    // error.status = 404;\r\n    // next(error);\r\n     const {item,qty,date,due,rate,tax} = req.body;\r\n        // const schema = Joi.object().keys({                      //useing the Joi middleware\r\n        //     item : Joi.string().required(),\r\n        //     qty  : Joi.number().integer().required(),\r\n        //     date : Joi.date().required(),\r\n        //     due  : Joi.date().required(),\r\n        //     rate : Joi.number().optional(),\r\n        //     tax  : Joi.number().optional()       \r\n        // });\r\n        // const {error, value} = Joi.valid(req.body,schema);\r\n        // if(error && error.details){\r\n        //     return res.status(400).json(error)\r\n        // }\r\n        // Invoice.create(value)\r\n        // .then(invoice =>res.json(invoice))\r\n        // .catch(err => res.status(500).json(err));\r\n        if(!item){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'item is required'});         //before use of Joi middleware\r\n         }\r\n        if(!qty){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'qty is required'});      //useing the HTTPstatuscodes\r\n        }\r\n        if(!date){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'date is required'});\r\n        }\r\n        if(!due){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'due is required'});\r\n        }\r\n        if(!rate){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'rate is required'});\r\n        }\r\n        if(!tax){\r\n            return res.status(HttpStatus.BAD_REQUEST).json({err : 'tax is required'});\r\n        }\r\n        Invoice.create({item,qty,date,due,rate,tax})\r\n        .then(invoice =>res.json(invoice))\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    findOne(req,res){\r\n        const {id} = req.params;\r\n        Invoice.findById(id)\r\n        .then(invoice =>{\r\n            if(!invoice){\r\n                return res.status(HttpStatus.NOT_FOUND).json({err: 'Could not find any invoice'});\r\n            }\r\n            return res.json(invoice);\r\n        })\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    delete(req,res){\r\n        const {id} = req.params;\r\n        Invoice.findByIdAndRemove(id)\r\n        .then(invoice =>{\r\n            if(!invoice){\r\n                return res.status(HttpStatus.NOT_FOUND).json({err: 'Could not delete any invoice'});\r\n            }\r\n            return res.json(invoice);\r\n        })\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    },\r\n    update(req,res){\r\n        const {id} = req.params;\r\n        const schema = Joi.object().keys({                      //useing the Joi middleware\r\n            item : Joi.string().optional(),\r\n            qty  : Joi.number().integer().optional(),\r\n            date : Joi.date().optional(),\r\n            due  : Joi.date().optional(),\r\n            rate : Joi.number().optional(),\r\n            tax  : Joi.number().optional()       \r\n        });\r\n        const {error, value} = Joi.va(req.body,schema);\r\n        if(error && error.details){\r\n            return res.status(HttpStatus.BAD_REQUEST).json(error)\r\n        }\r\n        Invoice.findOneAndUpdate({_id:id},value,{new :true})\r\n        .then(invoice =>res.json(invoice))\r\n        .catch(err => res.status(HttpStatus.INTERNAL_SERVER_ERROR).json(err));\r\n    }\r\n};"]}